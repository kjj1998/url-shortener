---
apiVersion: v1
kind: Namespace
metadata:
  name: url-shortener
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: url-shortener
  name: deployment-url-shortener
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-url-shortener
  replicas: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-url-shortener
    spec:
      containers:
        - name: app-url-shortener
          image: 271407076537.dkr.ecr.ap-southeast-1.amazonaws.com/url-shortener:0.6.4
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
            requests:
              cpu: "0.1"
              memory: "128Mi"
          envFrom:
            - secretRef:
                name: db-credentials3
            - secretRef:
                name: cache-credentials
          env:
            - name: PROD
              value: "true"
            - name: POSTGRES_K8s_HOST
              value: "host.docker.internal"
            - name: REDIS_K8s_HOST
              value: "host.docker.internal"
---
apiVersion: v1
kind: Service
metadata:
  namespace: url-shortener
  name: service-url-shortener
spec:
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-url-shortener
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: url-shortener
  name: deployment-url-shortener-auth
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-url-shortener-auth
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-url-shortener-auth
    spec:
      containers:
        - name: app-url-shortener-auth
          image: 271407076537.dkr.ecr.ap-southeast-1.amazonaws.com/url-shortener-auth:0.1.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
          resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
            requests:
              cpu: "0.1"
              memory: "128Mi"
          envFrom:
            - secretRef:
                name: db-credentials3
            - secretRef:
                name: cache-credentials
          env:
            - name: PROD
              value: "true"
            - name: POSTGRES_K8s_HOST
              value: "host.docker.internal"
            - name: REDIS_K8s_HOST
              value: "host.docker.internal"
---
apiVersion: v1
kind: Service
metadata:
  namespace: url-shortener
  name: service-url-shortener-auth
spec:
  ports:
    - port: 80
      targetPort: 8001
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-url-shortener-auth
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: url-shortener
  name: ingress-url-shortener
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /url-shortener
            pathType: Prefix
            backend:
              service:
                name: service-url-shortener
                port:
                  number: 80
    - http:
        paths:
          - path: /url-shortener-auth
            pathType: Prefix
            backend:
              service:
                name: service-url-shortener-auth
                port:
                  number: 80